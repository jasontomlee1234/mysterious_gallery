{"version":3,"sources":["logo.svg","components/NavBar.js","components/NFTCard.js","pages/Marketplace.js","components/CollectionNFTCard.js","pages/Collection.js","pages/SimpleMarketPlace.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","StyledNavBarDiv","styled","div","StyledNavButton","button","NavBar","props","useWeb3React","account","connector","library","chainId","activate","deactivate","active","error","style","width","color","paddingTop","height","onClick","slice","to","NFTCard","useStyles","makeStyles","table","minWidth","getMarketplaceContract","abi","Contract","address","marketplace","getFantomDiamondContract","fantomDiamond","getOffer","contract","tokenId","ledger","getLedger","a","promiseArray","i","push","Promise","all","getOnSale","onSaleList","forEach","element","parseFloat","formatEther","price","seller","Marketplace","useState","setFantomDiamondContract","setMarketplaceContract","setLedger","setOnSaleList","isLoading","setIsLoading","onSaleTableRow","setOnSaleTableRow","classes","useEffect","fdc","fantomDiamondAbi","mp","marketplaceAbi","_ledger","onSale","console","log","map","x","count","CircularProgress","length","TableContainer","component","Paper","Table","className","TableHead","background","TableRow","TableCell","align","TableBody","row","fontSize","img","Collection","StyledDiv","StyledWrapDiv","StyledRowDiv","connect","getSigner","offer","toString","bid","value","catch","e","alert","data","message","SimpleMarketPlace","nftContract","setNftContract","marketplaceContract","listPrice","setListPrice","sellTokenId","setSellTokenId","buyTokenId","setBuyTokenId","cancelTokenId","setCancelTokenId","approveTokenId","setApproveTokenId","_nftContract","_marketplaceContract","onChange","event","target","cursor","approve","parseEther","ask","marginLeft","backgroundImage","cancelOffer","StyledMainBodyDiv","StyledFontDiv","App","fontFamily","float","marginTop","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","provider","Web3Provider","pollingInterval","document","getElementById"],"mappings":"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","file":"static/js/main.17ba6e84.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\nimport { useWeb3React } from '@web3-react/core'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport styled from 'styled-components';\nimport React,{ Component } from \"react\";\n\nimport {\n    Link\n} from \"react-router-dom\";\n\nconst injected = new InjectedConnector({ supportedChainIds: [4002, 250] })\n\nconst StyledNavBarDiv = styled.div`\nbackground: black;\nfloat: left;\nheight: 100vh;\nwidth: 180px;\npadding: 0px\n`\n\nconst StyledNavButton = styled.button`\nwidth:100%;\nheight: 40px;\nmargin-top: 20px;\nbackground: transparent;\ncolor: white;\nborder:none;\nfont-size: 20px;\ncursor: pointer;\n&:focus { outline: none; }\n:hover {\n    background: white;\n    color: black;\n}\n`\n\nfunction NavBar(props) {\n    const { connector, library, chainId, account, activate, deactivate, active, error } = useWeb3React()\n\n    return (\n        <StyledNavBarDiv>\n            <p style={{width:\"100%\", color:\"white\", paddingTop:\"10px\", height:\"10px\"}}><b>FantomDiamond</b></p>\n            <StyledNavButton onClick={() => { account ? deactivate() : activate(injected) }}>{\n                account ? account.slice(0, 6) + \"...\" : \"CONNECT\"\n            }</StyledNavButton>\n            {/* <StyledNavButton><Link to=\"/collection\">Collections</Link></StyledNavButton> */}\n            <Link to=\"/marketplace\"><StyledNavButton>MARKET</StyledNavButton></Link>\n            <Link to=\"/order\"><StyledNavButton>TRADE</StyledNavButton></Link>\n            {/* <StyledNavButton><Link to=\"/marketplace\">my offer</Link></StyledNavButton> */}\n        </StyledNavBarDiv>\n    )\n}\n\nexport default NavBar","\nimport { useWeb3React } from '@web3-react/core'\nimport React,{ Component } from \"react\";\n\nfunction bid(contract,library, tokenId, price){\n    contract = contract.connect(library.getSigner())\n    contract.bid(tokenId,{\n        value: price\n    })\n    console.log(contract)\n}\n\nfunction NFTCard({contract, tokenId, seller, price}){\n    const { library, account } = useWeb3React()\n    return (\n        <div>\n            <div>id: {tokenId}</div>\n            <div>seller: {seller}</div>\n            <div>price: {price} FTM</div>\n            {/* <button onClick={()=>{\n                bid(contract,library, tokenId, \"123123\")\n            }}>Buy</button> */}\n        </div>\n    )\n}\n\nexport default NFTCard","import { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\nimport { formatEther } from '@ethersproject/units'\n\nimport address from '../address.json'\nimport fantomDiamondAbi from \"../abis/FantomDiamond.json\"\nimport marketplaceAbi from \"../abis/Marketplace.json\"\nimport { useEffect, useState } from 'react'\n\nimport NFTCard from '../components/NFTCard'\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport React,{ Component } from \"react\";\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\n\nfunction getMarketplaceContract(abi, library) {\n    return new Contract(address.marketplace, abi, library)\n}\n\nfunction getFantomDiamondContract(abi, library) {\n    return new Contract(address.fantomDiamond, abi, library)\n}\n\nfunction getOffer(contract, tokenId) {\n    return contract.ledger(tokenId)\n}\n\nasync function getLedger(contract) {\n    let promiseArray = []\n    for (let i = 0; i < 500; i++) {\n        promiseArray.push(getOffer(contract, i))\n    }\n\n    return await Promise.all(promiseArray)\n}\n\nfunction getOnSale(ledger) {\n    let onSaleList = []\n    ledger.forEach((element, i) => {\n        const price = parseFloat(formatEther(element.price))\n        if (price > 0) {\n            onSaleList.push({\n                tokenId: i,\n                seller: element.seller,\n                price: formatEther(element.price)\n            })\n        }\n    })\n\n    return onSaleList\n}\n\nfunction createData(tokenId, seller, price) {\n    return { tokenId, seller, price };\n}\n\n\nfunction Marketplace(props) {\n    const { library, account } = useWeb3React()\n    const [fantomDiamondContract, setFantomDiamondContract] = useState()\n    const [marketplaceContract, setMarketplaceContract] = useState()\n    const [ledger, setLedger] = useState()\n    const [onSaleList, setOnSaleList] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n\n    const [onSaleTableRow, setOnSaleTableRow] = useState([])\n\n    const classes = useStyles();\n\n    useEffect(async () => {\n        const fdc = getFantomDiamondContract(fantomDiamondAbi, library)\n        const mp = getMarketplaceContract(marketplaceAbi, library)\n\n        setFantomDiamondContract(fdc)\n        setMarketplaceContract(mp)\n\n        const _ledger = await getLedger(mp)\n        setLedger(_ledger)\n\n        const onSale = getOnSale(_ledger)\n        // console.log(_ledger)\n        console.log(onSale)\n        setOnSaleList(onSale)\n\n        setOnSaleTableRow(onSale.map(x => {\n            return createData(x.tokenId, x.seller, x.price)\n        }))\n\n        setIsLoading(false)\n\n\n\n    }, [])\n    let count = 0\n    return (\n        <div>\n            {\n                isLoading ? <CircularProgress /> : \n                onSaleTableRow.length != 0 ?\n                <TableContainer component={Paper}>\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead style={{background:\"gray\"}}>\n                            <TableRow>\n                                <TableCell align=\"center\">id</TableCell>\n                                <TableCell align=\"center\">seller</TableCell>\n                                <TableCell align=\"center\">price</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>{\n                            // onSaleList.map(e=>{\n                            //     return <NFTCard contract={marketplaceContract} tokenId={e.tokenId} seller={e.seller} price={e.price}/>\n                            // })\n                            onSaleTableRow.map((row) => {\n                                console.log(row)\n                                return <TableRow key={count++}>\n                                    <TableCell align=\"center\">{row.tokenId}</TableCell>\n                                    <TableCell align=\"center\">{row.seller}</TableCell>\n                                    <TableCell align=\"center\">{row.price}</TableCell>\n                                </TableRow>\n                            })\n                        }\n                        </TableBody>\n                    </Table>\n                </TableContainer> :\n                <div style={{fontSize:\"40px\",color:\"lightsalmon\"}}>No avaliable Diamonds is on sale</div>\n            }\n\n        </div>\n    )\n}\n\nexport default Marketplace","import styled from 'styled-components';\nimport { useWeb3React } from '@web3-react/core'\nimport address from '../address.json'\nimport { useEffect, useState } from 'react';\nimport React,{ Component } from \"react\";\n\nconst StyledDiv = styled.div`\nborder-style: solid;\nwidth: 100px;\nheight: 100px;\n`\n\nconst StyleImgDiv = styled.div`\nheight: 100%;\n`\n\nconst StyleImg = styled.img`\nheight: 100%;\n`\n\nfunction approve(contract, library, tokenId) {\n    contract = contract.connect(library.getSigner())\n    contract.approve(address.fantomDiamond, tokenId)\n}\n\nfunction ask(contract, library, tokenId, price) {\n    contract = contract.connect(library.getSigner())\n    contract.ask(tokenId, price)\n}\n\nasync function isApproved(contract, library, tokenId) {\n    const approvedAddr = await contract.getApproved(tokenId)\n    return approvedAddr.toLowerCase() == address.marketplace.toLowerCase()\n}\n\nfunction CollectionNFTCard({ nftContract, marketplaceContract, tokenId, tokenUri }) {\n    const { library, account } = useWeb3React()\n    const [approved, setApproved] = useState()\n\n    useEffect(async () => {\n        const _isApproved = await isApproved(nftContract, library, tokenId)\n        setApproved(_isApproved)\n    })\n    return (\n        <StyledDiv>\n            <StyleImgDiv>\n                <StyleImg src=\"https://fantomdiamond.shop/diamondsForShowing/legendary/spooky.jpg\" />\n            </StyleImgDiv>\n            <div>{tokenId}</div>\n            <button onClick={() => {\n                // bid(contract,library, tokenId, \"123123\")\n            }}>Buy</button>\n        </StyledDiv>\n    )\n}\n\nexport default CollectionNFTCard","import fantomDiamondAbi from \"../abis/FantomDiamond.json\"\nimport marketplaceAbi from \"../abis/Marketplace.json\"\nimport { Contract } from '@ethersproject/contracts'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from \"react\"\nimport address from '../address.json'\nimport React,{ Component } from \"react\";\n\nimport CollectionNFTCard from '../components/CollectionNFTCard'\n\nfunction getContract(address, abi, library) {\n    return new Contract(address, abi, library)\n}\n\n\nasync function getCollection(contract, addr) {\n    let promiseList = []\n    const balance = parseInt((await contract.balanceOf(addr)).toString())\n    for (let i = 0; i < balance; i++) {\n        promiseList.push(contract.tokenOfOwnerByIndex(addr, i))\n    }\n\n    const tokenIds = await Promise.all(promiseList)\n\n    let promiseList2 = []\n    for (let i = 0; i < tokenIds.length; i++) {\n        promiseList2.push(contract.tokenURI(tokenIds[i].toString()))\n    }\n\n    const tokenURIs = await Promise.all(promiseList2)\n    return tokenURIs\n}\n\nfunction getTokenIdFromURI(uri){\n    const regex = /[0-9]/g;\n    const found = uri.match(regex);\n    return found.join('')\n}\n\nfunction Collection(props) {\n    const { library, account } = useWeb3React()\n    const [nftContract, setNftContract] = useState()\n    const [marketplaceContract, setMarketplaceContract] = useState()\n    const [collection, setCollection] = useState([])\n\n    useEffect(async () => {\n        const _nftContract = getContract(address.fantomDiamond, fantomDiamondAbi, library)\n        setNftContract(_nftContract)\n\n        const _marketplaceContract = getContract(address.marketplace, marketplaceAbi, library)\n        setMarketplaceContract(_marketplaceContract)\n\n        const _collection = await getCollection(_nftContract, account)\n        console.log(_collection)\n        setCollection(_collection)\n    }, [])\n\n    return (\n        <div>\n            {\n                collection.map(c=>{\n                    return <CollectionNFTCard nftContract={nftContract} marketplaceContract={marketplaceContract} tokenUri={c} tokenId={getTokenIdFromURI(c)}/>\n                })\n            }\n        </div>\n    )\n}\n\nexport default Collection","import { Contract } from '@ethersproject/contracts'\nimport fantomDiamondAbi from \"../abis/FantomDiamond.json\"\nimport marketplaceAbi from \"../abis/Marketplace.json\"\nimport address from '../address.json'\nimport styled from 'styled-components';\nimport { parseEther, formatEther } from '@ethersproject/units'\n\nimport { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport React,{ Component } from \"react\";\n\nconst StyledDiv = styled.div`\nborder-radius: 20px;\n\nwidth: 600px;\nmargin: auto;\npadding: 10px;\ntext-align: left;\nbackground-image: linear-gradient(to top, #a8edea 0%, #fed6e3 100%);\nborder-color: cadetblue;\n* {\n    margin: 5px;\n}\n`\n\nconst StyledWrapDiv = styled.div`\nmargin-top: 150px;\n`\n\nconst StyledRowDiv = styled.div`\nmargin: 20px;\n`\n\nconst StyledMarketButton = styled.button`\nmargin: 20px;\n`\n\nfunction getMarketplaceContract(abi, library) {\n    return new Contract(address.marketplace, abi, library)\n}\n\nfunction getFantomDiamondContract(abi, library) {\n    return new Contract(address.fantomDiamond, abi, library)\n}\n\nfunction approve(contract, library, tokenId) {\n    contract = contract.connect(library.getSigner())\n    contract.approve(address.marketplace, tokenId).catch((e) => {\n        console.log(e)\n        try {\n            alert(e.data.message)\n        } catch (e) {\n            alert(\"rejected\")\n        }\n    })\n}\n\nasync function isApproved(contract, library, tokenId) {\n    const approvedAddr = await contract.getApproved(tokenId)\n    return approvedAddr.toLowerCase() == address.marketplace.toLowerCase()\n}\n\nasync function getOffer(contract, tokenId) {\n    return await contract.ledger(tokenId)\n}\n\n// function getOfferP(contract, tokenId) {\n//     console.log(contract)\n//     return contract.ledger(tokenId)\n//     return \"\"\n// }\n\nasync function getLedger(contract) {\n    let promiseArray = []\n    // for (let i = 0; i < 500; i++) {\n    //     promiseArray.push(await getOffer(contract, i))\n    // }\n    console.log(await getOffer(contract, 0))\n\n    console.log(promiseArray)\n    return promiseArray\n}\n\nfunction ask(contract, library, tokenId, price) {\n    contract = contract.connect(library.getSigner())\n    price = parseEther(price).toString()\n    console.log(price)\n\n    contract.ask(tokenId, price).catch((e) => {\n        console.log(e)\n        try {\n            alert(e.data.message)\n        } catch (e) {\n            alert(\"rejected\")\n        }\n    })\n}\n\nasync function bid(contract, library, tokenId) {\n    contract = contract.connect(library.getSigner())\n    const offer = await getOffer(contract, tokenId)\n    const price = offer.price.toString()\n    console.log(\"price: \", price)\n    contract.bid(tokenId, {\n        value: price\n    }).catch((e) => {\n        console.log(e)\n        try {\n            alert(e.data.message)\n        } catch (e) {\n            alert(\"rejected\")\n        }\n    })\n}\n\nfunction cancelOffer(contract, library, tokenId) {\n    contract = contract.connect(library.getSigner())\n    contract.cancelOffer(tokenId).catch((e) => {\n        console.log(e)\n        try {\n            alert(e.data.message)\n        } catch (e) {\n            alert(\"rejected\")\n        }\n    })\n    console.log(contract)\n}\n\nfunction getOnSale(ledger) {\n    let onSaleList = []\n    ledger.forEach((element, i) => {\n        const price = parseFloat(formatEther(element.price))\n        if (price > 0) {\n            onSaleList.push({\n                tokenId: i,\n                seller: element.seller,\n                price: formatEther(element.price)\n            })\n        }\n    })\n\n    return onSaleList\n}\n\nfunction SimpleMarketPlace(props) {\n    const { library, account } = useWeb3React()\n    const [nftContract, setNftContract] = useState()\n    const [marketplaceContract, setMarketplaceContract] = useState()\n    const [listPrice, setListPrice] = useState(0)\n    const [sellTokenId, setSellTokenId] = useState(0)\n    const [buyTokenId, setBuyTokenId] = useState(0)\n    const [cancelTokenId, setCancelTokenId] = useState(0)\n    const [approveTokenId, setApproveTokenId] = useState(0)\n    const [marketDialogOpen, setMarketDialogOpen] = useState(false);\n    const [onSaleList, setOnSaleList] = useState([])\n\n\n\n    useEffect(async () => {\n        const _nftContract = getFantomDiamondContract(fantomDiamondAbi, library)\n        setNftContract(_nftContract)\n\n\n        const _marketplaceContract = getMarketplaceContract(marketplaceAbi, library)\n        setMarketplaceContract(_marketplaceContract)\n\n        // console.log(await getOffer(_marketplaceContract, 1))\n\n        // const _ledger = await getLedger(_marketplaceContract)\n        // const onSale = getOnSale(_ledger)\n\n        // setOnSaleList(onSale)\n\n    }, [])\n    function handleSellTokenIdChange(event) {\n        setSellTokenId(event.target.value)\n    }\n    function handlBuyTokenIdChange(event) {\n        setBuyTokenId(event.target.value)\n    }\n    function handleCancelTokenIdChange(event) {\n        setCancelTokenId(event.target.value)\n    }\n    function handleListPriceChange(event) {\n        setListPrice(event.target.value)\n    }\n    function handleApproveTokenIdChange(event) {\n        setApproveTokenId(event.target.value)\n    }\n\n    const handleClickOpen = () => {\n        setMarketDialogOpen(true);\n\n    };\n\n    const handleClose = (value) => {\n        setMarketDialogOpen(false);\n    };\n\n    return (\n        <StyledWrapDiv>\n            <StyledDiv>\n                <StyledRowDiv style={{fontSize:\"25px\"}}><b>Marketplace</b></StyledRowDiv>\n                <StyledRowDiv>\n                    <div style={{fontSize:\"20px\"}}><b>Sell</b></div>\n                    <div>1. approve</div>\n                    <label>Token id</label>\n                    <input onChange={handleApproveTokenIdChange} />\n                    <button style={{cursor:\"pointer\"}} onClick={() => { approve(nftContract, library, approveTokenId) }}>approve</button>\n                </StyledRowDiv>\n                \n\n                <StyledRowDiv>\n                    <div>2. place order</div>\n                    <label>Token id</label>\n                    <input onChange={handleSellTokenIdChange} />\n                    <label>list price</label>\n                    <input onChange={handleListPriceChange} />\n                    <button style={{cursor:\"pointer\"}} onClick={() => { ask(marketplaceContract, library, sellTokenId, listPrice) }}>sell</button>\n                </StyledRowDiv>\n                <hr style={{width:\"80%\", marginLeft:\"10%\", backgroundImage:\"linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0))\"}}></hr>\n                <StyledRowDiv>\n                    <div style={{fontSize:\"20px\"}} ><b>Purchase</b></div>\n                    <label>Token id</label>\n                    <input onChange={handlBuyTokenIdChange} />\n                    <button style={{cursor:\"pointer\"}} onClick={() => { bid(marketplaceContract, library, buyTokenId) }}>buy</button>\n                </StyledRowDiv>\n                <hr style={{width:\"80%\", marginLeft:\"10%\"}}></hr>\n                <StyledRowDiv>\n                    <div style={{fontSize:\"20px\"}}><b>Cancel order</b></div>\n                    <label>Token id</label>\n                    <input onChange={handleCancelTokenIdChange} />\n                    <button style={{cursor:\"pointer\"}} onClick={() => { cancelOffer(marketplaceContract, library, cancelTokenId) }}>cancel</button>\n                </StyledRowDiv>\n                {/* <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={marketDialogOpen}>\n                    <DialogTitle id=\"simple-dialog-title\">Market</DialogTitle>\n                    {\n                        onSaleList.map(onSale => {\n                            return <div>{onSale.price.toString()}</div>\n                        })\n                    }\n                </Dialog> */}\n            </StyledDiv>\n        </StyledWrapDiv>\n    )\n}\n\nexport default SimpleMarketPlace","import logo from './logo.svg';\nimport './App.css';\nimport NavBar from \"./components/NavBar\"\nimport Marketplace from \"./pages/Marketplace\"\nimport Collection from \"./pages/Collection\"\nimport SimpleMarketPlace from \"./pages/SimpleMarketPlace\"\n\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components';\nimport React,{ Component } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nconst StyledMainBodyDiv = styled.div`\nwidth: 100%;\n`\nconst StyledFontDiv = styled.div`\ncolor: lightsalmon;\nfont-size: 50px;\nmargin-top: 300px\n`\nfunction App() {\n  const { account, chainId } = useWeb3React()\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <StyledMainBodyDiv>\n        <p style={{fontSize:\"40px\", fontFamily:\"Aril\", color:\"white\", float:\"left\", width:\"100%\", marginTop:\"\"}}>Fantom Diamond NFT market</p>\n          <Switch>\n            <Route path=\"/marketplace\">\n              {\n                account ? <Marketplace /> : <StyledFontDiv>please connect wallet</StyledFontDiv>\n              }\n            </Route>\n            {/* <Route path=\"/collection\">\n            {\n              account ? <Collection /> : null\n            }\n          </Route> */}\n            <Route path=\"/order\">\n              {\n                account ? <SimpleMarketPlace /> : <StyledFontDiv>please connect wallet</StyledFontDiv>\n              }\n            </Route>\n          </Switch>\n        </StyledMainBodyDiv>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 1000\n  return library\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}